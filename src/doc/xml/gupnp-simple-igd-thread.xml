<?xml version="1.0"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN"
               "http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd" [
<!ENTITY version SYSTEM "version.xml">               
]>
<refentry id="GUPnPSimpleIgdThread">
<refmeta>
<refentrytitle role="top_of_page" id="GUPnPSimpleIgdThread.top_of_page">GUPnPSimpleIgdThread</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>GUPNP-IGD Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>GUPnPSimpleIgdThread</refname>
<refpurpose>Threaded wrapper for GUPnPSimpleIgd</refpurpose>
</refnamediv>

<refsynopsisdiv id="GUPnPSimpleIgdThread.synopsis" role="synopsis">
<title role="synopsis.title">Synopsis</title>

<synopsis>
                    <link linkend="GUPnPSimpleIgdThread-struct">GUPnPSimpleIgdThread</link>;
                    <link linkend="GUPnPSimpleIgdThreadClass">GUPnPSimpleIgdThreadClass</link>;
<link linkend="GUPnPSimpleIgdThread">GUPnPSimpleIgdThread</link> * <link linkend="gupnp-simple-igd-thread-new">gupnp_simple_igd_thread_new</link>      (void);
</synopsis>
</refsynopsisdiv>

<refsect1 id="GUPnPSimpleIgdThread.object-hierarchy" role="object_hierarchy">
<title role="object_hierarchy.title">Object Hierarchy</title>
<synopsis>
  <link linkend="GObject">GObject</link>
   +----<link linkend="GUPnPSimpleIgd">GUPnPSimpleIgd</link>
         +----GUPnPSimpleIgdThread
</synopsis>
</refsect1>








<refsect1 id="GUPnPSimpleIgdThread.description" role="desc">
<title role="desc.title">Description</title>
<para>
This wraps a <link linkend="GUPnPSimpleIgd"><type>GUPnPSimpleIgd</type></link> into a thread so that it can be used without
having a <link linkend="GMainLoop"><type>GMainLoop</type></link> running.</para>
<para>
</para>
</refsect1>

<refsect1 id="GUPnPSimpleIgdThread.details" role="details">
<title role="details.title">Details</title>
<refsect2 id="GUPnPSimpleIgdThread-struct" role="struct">
<title>GUPnPSimpleIgdThread</title>
<indexterm zone="GUPnPSimpleIgdThread-struct"><primary sortas="GUPnPSimpleIgdThread">GUPnPSimpleIgdThread</primary></indexterm><programlisting>typedef struct _GUPnPSimpleIgdThread GUPnPSimpleIgdThread;</programlisting>
<para>
All members are private, access them using methods and properties</para>
<para>
</para></refsect2>
<refsect2 id="GUPnPSimpleIgdThreadClass" role="struct">
<title>GUPnPSimpleIgdThreadClass</title>
<indexterm zone="GUPnPSimpleIgdThreadClass"><primary sortas="GUPnPSimpleIgdThreadClass">GUPnPSimpleIgdThreadClass</primary></indexterm><programlisting>typedef struct {
  GUPnPSimpleIgdClass parent_class;

  /*virtual functions */
} GUPnPSimpleIgdThreadClass;
</programlisting>
<para>
The Raw UDP component transmitter class</para>
<para>
</para><variablelist role="struct">
<varlistentry>
<term><link linkend="GUPnPSimpleIgdClass">GUPnPSimpleIgdClass</link>&#160;<structfield>parent_class</structfield>;</term>
<listitem><simpara> Our parent
</simpara></listitem>
</varlistentry>
</variablelist></refsect2>
<refsect2 id="gupnp-simple-igd-thread-new" role="function">
<title>gupnp_simple_igd_thread_new ()</title>
<indexterm zone="gupnp-simple-igd-thread-new"><primary sortas="gupnp_simple_igd_thread_new">gupnp_simple_igd_thread_new</primary></indexterm><programlisting><link linkend="GUPnPSimpleIgdThread">GUPnPSimpleIgdThread</link> * gupnp_simple_igd_thread_new      (void);</programlisting>
<para>
Creates a new <link linkend="GUPnPSimpleIgdThread"><type>GUPnPSimpleIgdThread</type></link></para>
<para>
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> the new <link linkend="GUPnPSimpleIgdThread"><type>GUPnPSimpleIgdThread</type></link>
</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>




</refentry>
